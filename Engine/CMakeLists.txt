cmake_minimum_required(VERSION 3.10)

set(libname xelgame)

project (project_${libname})

enable_language(CXX)
set(X_GAME_OPTION_STATIC OFF)

message(STATUS "CMAKE_BUILD_TYPE=" ${CMAKE_BUILD_TYPE})
message(STATUS "CMAKE_SYSTEM_NAME=" ${CMAKE_SYSTEM_NAME})
message(STATUS "CMAKE_CXX_COMPILER_ID=" ${CMAKE_CXX_COMPILER_ID})

find_package(Threads REQUIRED)
if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
# message(STATUS "===> Check MSVC Options")
# message(STATUS "${CMAKE_CXX_FLAGS}")
#	string(REPLACE "/EHsc" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
#	add_compile_options("-EHs-c-")
#	add_compile_options("-wd4530")
# message(STATUS "===> Second Check MSVC Options")
# message(STATUS "${CMAKE_CXX_FLAGS}")

	add_compile_options("-D_WIN32_WINNT=0x0601")
	add_compile_options("-D_CRT_SECURE_NO_WARNINGS")
	add_compile_options("-MP")
	add_compile_options("-std:c++latest")
	add_compile_options("-utf-8")
	if (CMAKE_BUILD_TYPE STREQUAL "Release")
		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup")
	endif()
	set(cpp Threads::Threads)
else()
	set(CMAKE_CXX_STANDARD 17)
	set(CMAKE_CXX_STANDARD_REQUIRED ON)
	set(CMAKE_CXX_EXTENSIONS OFF)

	if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
		# add_compile_options("-D_XOPEN_SOURCE=700")
		add_compile_options("-g")
		add_compile_options("-Wall")
		# add_compile_options("-Wno-exceptions")
		add_compile_options("-Wno-attributes")
		add_compile_options("-Wno-parentheses")
		add_compile_options("-Wno-deprecated-declarations")
		add_compile_options("-Werror")
		set(cpp stdc++fs stdc++ Threads::Threads)
	elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
		# add_compile_options("-D_XOPEN_SOURCE=700")
		add_compile_options("-g")
		add_compile_options("-Wall")
		# add_compile_options("-Wno-exceptions")
		add_compile_options("-Wno-attributes")
		add_compile_options("-Wno-parentheses")
		add_compile_options("-Wno-deprecated-declarations")
		add_compile_options("-Werror")
		set(cpp c++fs c++ Threads::Threads)
	elseif (CMAKE_CXX_COMPILER_ID STREQUAL "AppleClang")
		# add_compile_options("-D_XOPEN_SOURCE=700")
		add_compile_options("-g")
		add_compile_options("-Wall")
		# add_compile_options("-Wno-exceptions")
		add_compile_options("-Wno-attributes")
		add_compile_options("-Wno-parentheses")
		add_compile_options("-Wno-deprecated-declarations")
		add_compile_options("-Werror")
		set(cpp Threads::Threads)
	endif()
endif()

if (CMAKE_SYSTEM_NAME MATCHES "MSYS")
	if (CMAKE_BUILD_TYPE STREQUAL "Debug")
		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -mconsole")
	endif()
	include_directories("/mingw64/include/")
	link_directories("/mingw64/lib/")
elseif(CMAKE_SYSTEM_NAME MATCHES "Darwin")
	include_directories("/usr/local/include/")
	link_directories("/usr/local/lib/")
endif()


if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
	if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
		set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/.local" CACHE PATH "..." FORCE)
	else()
		set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/.local" CACHE PATH "..." FORCE)
	endif()
endif()

set(LIBRARY_OUTPUT_PATH                        "${PROJECT_BINARY_DIR}/bin")
set(EXECUTABLE_OUTPUT_PATH                     "${PROJECT_BINARY_DIR}/bin")
set(CMAKE_MODULE_PATH                          ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake/Modules/")


if(CMAKE_SYSTEM_NAME MATCHES "Darwin")
set(MACOSX_RPATH    TRUE)
set(LOCAL_RPATH     "@loader_path")
else()
set(LOCAL_RPATH     "\$ORIGIN")
endif()

set(ROOT_PROJECT_BINARY_PATH                 ${PROJECT_BINARY_DIR})
set(X_INCLUDE_DIRS                           ${CMAKE_BINARY_DIR}/../xel/.local/include)
set(X_LIBRARY_DIRS                           ${CMAKE_BINARY_DIR}/../xel/.local/lib)
set(X_LIBRARIES                              xel)
set(D3RD_INCLUDE_DIRS                        ${CMAKE_BINARY_DIR}/../../build_3rd/.install/include)
set(D3RD_LIBRARY_DIRS                        ${CMAKE_BINARY_DIR}/../../build_3rd/.install/lib)
set(D3RD_LIBRARIES                           z)

enable_testing()
add_subdirectory(lib)
add_subdirectory(sample)
